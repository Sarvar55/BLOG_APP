FetchType özelliğinden önce Hibernate'in ne olduğuna değinecek olursak: En genel ifadeyle Hibernate bir ORM(Object/Relational Mapping) aracıdır. Peki ORM Nedir ?

* ORM : İlişkisel veritabanında yer alan verilerin nesne yönelimli diller içerisinde nesne olarak kullanılmasına olanak tanıyan bir teknolojidir.

 #FetchType : Aralarında ilişki bulunan entitylerden bir tarafı yüklerken diğer tarafın yüklenme stratejisini belirlememize olanak sağlar.

 Elimizde yürütülen projeleri (Proje) ve bu projelerde çalışanları(Calisan) tuttuğumuz iki entity olsun. Projeler ve çalışanlar arasında bir ilişki bulunduğundan veritabanından Proje entitysini yüklediğimizde ilişkili olduğu Calisan tablosununda yüklenmesini istiyorsak FetchType tipini fetch=FetchType.EAGER olarak belirleriz.

 Bunun aksine Proje entitysini yüklediğimizde Calisan entitysinin yüklenmesini istemiyorsak yani ihtiyaç olması halinde Calisan entitysini yüklemek istiyorsak FetchType tipini fetch=FetchType.LAZY olarak belirleriz.
 # Peki geliştireceğimiz uygulama içerisinde bu tiplerinin kullanımını nasıl belirlemeliyiz ?

 Eğer @OneToOne veya @ManyToOne tipinde ilişki bulunan veritabanınlarından yararlanıyorsak FetchType olarak EAGER(Ön Yükleme) kullanmak daha doğrudur. Yani ilişkili entity bir tane olduğundan ön yükleme yapmak performans açısından bir sorun oluşturmaz.

 Eğer ki  @OneToMany veya  @ManyToMany kullanıyorsak da FetchType olarak LAZY(Tembel Yükleme) kullanmak daha doğrudur. Çünkü ilişkili entityler çok sayıda olması halinde ön yükleme yapacak olursak bu durum performans kaybına neden olur. Bunun için ihtiyaç olması halinde yüklemek daha doğru bir çözüm olur.




 Cascade, bir JPA standardıdır.
  *  Entity sınıflarımızdaki ilişkilerin hareketlerini yani davranışlarını cascade tipleri ile ayarlarız.
  *  Yani ilişkili sınıfların birbirlerinden etkilenip etkilenmemesini sağlıyor.
  *  Örnek olarak bir değer sildiğimizde o silinen veri ilişkili olan verilerin etkilenmesini ya da etkilenmemesini sağlarız.
  * Bu JPA standartı, veritabanımıza bulaşmadan kolaylıkla Java sınıflarımız üzerinden işlemleri yönetmemizi sağlar.